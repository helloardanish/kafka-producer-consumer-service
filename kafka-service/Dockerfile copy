FROM ubuntu:latest
#FROM alpine:latest

WORKDIR /app

# Install necessary packages
RUN apt-get update && apt-get install -y wget && apt-get install -y curl && apt-get install -y openjdk-21-jdk

#ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in /


# Download Kafka source
RUN wget https://downloads.apache.org/kafka/3.7.0/kafka-3.7.0-src.tgz \
    && tar -xzf kafka-3.7.0-src.tgz \
    && rm kafka-3.7.0-src.tgz


#RUN wget https://downloads.apache.org/kafka/3.7.0/kafka-3.7.0-src.tgz

#RUN tar -xzf kafka-3.7.0-src.tgz

#RUN rm kafka-3.7.0-src.tgz

#RUN which java

RUN update-alternatives --config javac

# Set JAVA_HOME environment variable
#RUN ls -l /usr/bin/java

ENV JAVA_HOME /usr/lib/jvm/java-21-openjdk-arm64/
#ENV JAVA_HOME /usr/lib/jvm/java-21-openjdk-amd64/bin/java

# Build Kafka using gradlew

#RUN kafka-3.7.0-src/./gradlew jar -PscalaVersion=2.13.12
RUN cd kafka-3.7.0-src \
    && ./gradlew jar -PscalaVersion=2.13.12

# Remove SLF4J Duplication
RUN rm /app/kafka-3.7.0-src/trogdor/build/dependant-libs-2.13.12/slf4j-reload4j-1.7.36.jar


#run zookeeper
#RUN kafka-3.7.0-src/bin/zookeeper-server-start.sh kafka-3.7.0-src/config/zookeeper.properties

#run kafka
#RUN kafka-3.7.0-src/bin/kafka-server-start.sh kafka-3.7.0-src/config/server.properties

# view topic
#RUN kafka-3.7.0-src/bin/kafka-topics.sh --list --bootstrap-server localhost:9092

# create topic
#RUN kafka-3.7.0-src/bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --message

# push to topic
#RUN echo "Test" | kafka-3.7.0-src/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic message

# listen to topic
#RUN kafka-3.7.0-src/bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic message --from-beginning

#RUN kafka-3.7.0-src/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic message --from-beginning




#RUN kafka-3.7.0-src/bin/kafka-server-stop.sh

#RUN kafka-3.7.0-src/bin/zookeeper-server-stop.sh


# Copy the script and make it executable
COPY initial_commands.sh .
RUN chmod +x initial_commands.sh

# Run the script to start servers, create topic, and stop servers after 1 minute
RUN ./initial_commands.sh


# Define the entrypoint to start ZooKeeper and Kafka servers
ENTRYPOINT ["sh", "-c", "kafka-3.7.0-src/bin/zookeeper-server-start.sh kafka-3.7.0-src/config/zookeeper.properties & \
    sleep 5; \
    kafka-3.7.0-src/bin/kafka-server-start.sh kafka-3.7.0-src/config/server.properties &"]
